1
00:00:00,240 --> 00:00:03,030
詳細設計の成果物イメージを確認していきましょう。

2
00:00:04,950 --> 00:00:06,900
まずロバストネス分析。

3
00:00:06,900 --> 00:00:15,270
これを行った結果として、ユースケースを細かく分解して担当するクラス責務を担当するクラスが決まった状態。

4
00:00:15,270 --> 00:00:16,830
これが成果物になります。

5
00:00:18,200 --> 00:00:30,830
元ネタとしては、データフロー図と機能設計を使ってこんな風に途中途中の処理を細かく細分化していて、その中に文字は小さいんですけれども、

6
00:00:31,100 --> 00:00:40,730
スレッド作成コントローラーとかスレッド作成サービスとか、そういうふうに具体的なクラスの名前を当て込んでいて、責務ごとに担当するクラスを当てはめ、

7
00:00:40,730 --> 00:00:44,480
当てはめていくっていうのがロバストネス分析のゴールになってきます。

8
00:00:45,680 --> 00:00:48,290
そして、その次の段階でシーケンス図。

9
00:00:48,500 --> 00:00:58,310
これはクラス同士のやりとり、つまり処理の流れを整理して、それぞれのクラスの責務に対して必要なメソッドを決めていくというふうになっていき

10
00:00:58,310 --> 00:00:58,880
ます。

11
00:00:59,570 --> 00:01:10,130
なのでこういうふうな図なんですけれども、左からプログラマーがいてでスレッド作成画面を経て、左から3番目にこのスレッド作成コントローラーっていう

12
00:01:10,130 --> 00:01:15,980
クラスがあって、それがスレッド作成のユースケースユースケースを実現する専用のクラス。

13
00:01:16,010 --> 00:01:19,160
これは後で説明するので、一旦は割愛します。

14
00:01:19,610 --> 00:01:24,350
このコントローラーがユースケースクラスに対して処理を依頼する。

15
00:01:24,470 --> 00:01:30,230
そして、ユースケースクラスは、さらにその中身でその下に続いていく。

16
00:01:30,230 --> 00:01:36,560
いろいろなクラスに対してメソッドを実行して処理をパスしていくっていう具体的な流れを整理します。

17
00:01:36,890 --> 00:01:45,560
これによって一個一個のクラスの挙動が分かってくるので、クラス図を作成するためにどんなメソッドを入れる必要があるのか、それが明確に

18
00:01:45,560 --> 00:01:46,430
なっていきます。

19
00:01:47,990 --> 00:01:48,830
そして最後。

20
00:01:49,040 --> 00:01:53,240
ここまでの情報をすべて集約するとクラス図になります。

21
00:01:53,270 --> 00:02:03,260
具体的には、一個一個のクラスが持つべき変数とかメソッドを整理したり、あとはクラス映画クラスを呼び出して使うとか、そういったような

22
00:02:03,260 --> 00:02:07,880
包含関係とか依存関係を一覧で可視化して整理するものです。

23
00:02:09,360 --> 00:02:11,550
具体的にはこういうものをつくっていきます。

24
00:02:12,330 --> 00:02:21,270
左から、例えばそのスレッドの登録受付のコントローラーがあって、そして左から2番目にスレッド作成のユースケースがあったり、スレッドが作られ

25
00:02:21,270 --> 00:02:31,470
たら宛先の社員にSLACK通知を飛ばすユースケースがあったり、そして左から3列目にはユースケースを実現するための細かいクラスが書いてあっ

26
00:02:31,470 --> 00:02:38,610
たりといったように、左から順番に右に向けて処理が具体化していくっていうふうな関係になっています。

27
00:02:39,060 --> 00:02:48,090
これは左から順に右に流していくってのは、私の中では見やすいかなと思ってそうやってるんですけれども、現場ごとに細かなルールは

28
00:02:48,090 --> 00:02:53,100
あるので、最後は現場のルールに合わせて書いてもらえたらいいんじゃないかなと思います。

