1
00:00:00,830 --> 00:00:11,280
では、エンティティと値オブジェクトの整理がドメインモデルをベースに終わったので、コンポジションとか集約とかまあそういう関係性を整理していき

2
00:00:11,280 --> 00:00:11,790
ましょう。

3
00:00:12,390 --> 00:00:16,350
まずは集約とコンポジションを整理していけば分かりやすい例です。

4
00:00:16,740 --> 00:00:26,940
まずはマイルストーンはプロジェクトに包含されているので、コンポジションを描きたいですとで、どう書けばよかったかというと、コンポジションは

5
00:00:27,180 --> 00:00:28,590
黒塗りの。

6
00:00:29,790 --> 00:00:32,070
必死を描いてあげます。

7
00:00:32,100 --> 00:00:32,820
こんな感じです。

8
00:00:32,850 --> 00:00:35,250
黒塗りの菱形がコンポジションです。

9
00:00:36,450 --> 00:00:48,810
そして他にコンポジションがあったかというと、通知先がSHINEに内包されていて、社員が辞めると通知先も消さなきゃいけないはずな

10
00:00:48,810 --> 00:00:56,100
ので、社員と通知先もコンポジションでいいでしょうと考えることができます。

11
00:00:56,160 --> 00:00:59,220
なので通知先と。

12
00:01:00,440 --> 00:01:03,290
個々の社員もコンポジションでつないでおきましょう。

13
00:01:05,540 --> 00:01:06,590
こんな感じですね。

14
00:01:07,580 --> 00:01:20,390
あとは、ほかにコンポジションがあるのはタスクがなくなったらスレッドも消えるんで、タスクとすれどもコンポジションでよさそうですね。

15
00:01:23,530 --> 00:01:39,520
そしてスレッドに対して返信もそうだし、返信に対する帰属管理もコンポジションですねと何でここはコンポジションがつながっていくような関係でいい

16
00:01:39,520 --> 00:01:41,110
んではないでしょうか。

17
00:01:41,770 --> 00:01:42,880
こんな感じですね。

18
00:01:46,490 --> 00:01:47,750
そして。

19
00:01:50,370 --> 00:01:52,680
他にはなさそうですね。

20
00:01:52,710 --> 00:01:55,920
じゃあ、次は集約を考えていきましょう。

21
00:01:56,490 --> 00:02:11,670
プロジェクトに対する社員が集約の関係にあったので、とりあえず線をつないでおいて、そして集約はどう描くはずだったかというと、白塗りの

22
00:02:11,670 --> 00:02:15,090
ひし形で描きましょうとお伝えしました。

23
00:02:15,120 --> 00:02:19,710
集約は白塗りの菱形で描きましょうとお伝えしました。

24
00:02:19,710 --> 00:02:20,820
このページですね。

25
00:02:21,090 --> 00:02:24,750
上から2つ目のこれにあたりますなので。

26
00:02:25,860 --> 00:02:30,750
白抜きの必死形を描いてあげれば良いです。

27
00:02:31,560 --> 00:02:33,410
こんな感じで集約表現できました。

28
00:02:34,660 --> 00:02:36,160
他には。

29
00:02:38,020 --> 00:02:39,820
何があるかというと。

30
00:02:42,860 --> 00:02:43,730
そうですね。

31
00:02:43,730 --> 00:02:46,790
プロジェクトとタスクもここに。

32
00:02:47,700 --> 00:02:52,620
プロジェクトがタスクを保有しているので、これはあれですね。

33
00:02:52,950 --> 00:02:57,510
コンポジションだったのをちょっと先程入れ漏れましたね。

34
00:02:58,250 --> 00:03:01,460
佑都プロジェクトはコンポジションですね。

35
00:03:05,750 --> 00:03:17,330
まぁ、なのでロジックとしてはプロジェクトが削除されたらマイルストーンとタスクが道連れになって削除されないとおかしいよねというそういうロジック

36
00:03:17,330 --> 00:03:17,770
ですね。

37
00:03:18,720 --> 00:03:30,510
そしてタスクにはアサインとスタッフIDというのがあるので、タスクとする社員も何かしら関係があるけど、別に社員が辞めたからって翼消さなきゃ

38
00:03:30,510 --> 00:03:38,820
いけないわけじゃないし、翼がなくなったからって社員が辞めるわけではないので、まあ関係性があるよと表示するだけの。

39
00:03:41,500 --> 00:03:43,930
集約でいいんじゃないでしょうか。

40
00:03:47,870 --> 00:03:57,530
でもしくはなんですけれども、あのー集約って考えるとID参照しましょうとお伝えしました。

41
00:03:57,860 --> 00:04:03,530
なので集約にすると、こんな風に必ずID参照を入れないといけないんですけども。

42
00:04:03,840 --> 00:04:04,610
まあ何て言うんですかね。

43
00:04:04,610 --> 00:04:14,990
そこまで強い関係性じゃないよっていう場合も実際あったりするんで、集約程強い関係じゃないよって場合はもう何もない。

44
00:04:15,020 --> 00:04:17,329
ただの線で繋げば良かったりします。

45
00:04:17,450 --> 00:04:19,160
これも一つ覚えておくといいです。

46
00:04:21,010 --> 00:04:32,380
そして残りを俯瞰すると、今パスワードが浮いてるのとあと社員とスレッドとか返信の関係性が整理されてないですね。

47
00:04:32,920 --> 00:04:36,190
あと、ここのエリートのタスクステータスも浮いてますね。

48
00:04:37,120 --> 00:04:38,080
まずは。

49
00:04:39,350 --> 00:04:44,450
続いてSIGNとパスワードの関係なんですけれども。

50
00:04:45,360 --> 00:04:48,420
ここをつないでいこうと思います。

51
00:04:48,450 --> 00:04:56,250
で、ここはそんなに難しくないんですけれども、陽動可能性っていうものを使っていきます。

52
00:04:56,250 --> 00:05:07,440
で、誘導可能性って日本語が意味は分からないので、もう言葉に負けちゃ駄目なんですけれども、誘導可能性っていうものはパスワードは社員が。

53
00:05:08,390 --> 00:05:19,400
操作しますよとパスワードは社員からしか操作できませんよっていうふうに1方向かつ外からは絶対触れないっていうそういうような閉じた関係性

54
00:05:19,670 --> 00:05:21,440
をあらわすときに使います。

55
00:05:21,710 --> 00:05:28,700
なのでパスワードは、社員エンティティ以外どうやっても触りようがないっていう、そういう限定的な関係性のときに。

56
00:05:29,710 --> 00:05:39,400
誘導可能性を使いますで、もし現場によってそれ違うよっていう別の解釈がある現場もあるかもしれないんですけども、それはもう現場のルール

57
00:05:39,400 --> 00:05:42,370
に従っていただければいいかなと思います。

58
00:05:42,400 --> 00:05:51,790
ただ、絶対共通するところとしては、社員からパスワードっていう1方向の強い制約があるよっていう表現だと理解していただければバッチリ大丈夫です

59
00:05:52,240 --> 00:05:53,890
で、こんな風に表現します。

60
00:05:57,890 --> 00:06:04,950
なので、社員からパスワードには行くけど、パスワードから社員はバツですよとそういうことを表しています。

61
00:06:06,230 --> 00:06:17,150
そしてあとは社員からスレッドとか社員から返信に関しては、これは依存のCREATEとかユーズを表します。

62
00:06:17,480 --> 00:06:19,490
で、今回はCREATEですね。

63
00:06:19,520 --> 00:06:23,930
なのでまあ依存って聞くからちょっとわかりにくいんですけれども。

64
00:06:24,790 --> 00:06:35,050
単純に社員エンティティが含んでいるCREATETHREADメソッドを経由してしかスレッドって作られませんよとか。

65
00:06:35,880 --> 00:06:47,310
リプライメソッドを通じてしか返信で作られませんよっていう社員エンティティからしかスレッドを作るとか、返信を作るっていう操作はできませんっていう

66
00:06:47,310 --> 00:06:50,910
そういう依存関係をCREATEで表していきます。

67
00:06:51,420 --> 00:06:52,320
なので。

68
00:06:53,890 --> 00:06:54,580
こうですね。

69
00:06:54,580 --> 00:06:55,630
ここに。

70
00:06:57,840 --> 00:07:02,940
CREATEっていうものを依存関係として表してあげればバッチリです。

71
00:07:03,710 --> 00:07:17,900
そしてリプライも同じように返信をここから作ってあげますと、こういう風に社員エンティティからしかスレッドとか返信は作れませんよっていう依存

72
00:07:17,900 --> 00:07:20,900
関係をクリエイトっていうもので表してあげました。

73
00:07:22,610 --> 00:07:24,170
そしてですね。

74
00:07:24,170 --> 00:07:27,440
3位タスクステータスですね。

75
00:07:27,980 --> 00:07:36,320
これは特段何の論点もなくて、単純に翼のステータスっていうのは翼ステータスから選べますよっていう。

76
00:07:36,440 --> 00:07:45,320
ただの緩い参照関係を持っているだけなので、もう特段何も考えずに線で繋いであげれば大丈夫です。

77
00:07:48,640 --> 00:07:50,690
こうでこうですね。

78
00:07:50,980 --> 00:07:51,850
なので。

79
00:07:53,720 --> 00:08:00,920
ここのタスクステータスは、列挙型のタスクステータスメディエータークラスからしか選べません。

80
00:08:00,920 --> 00:08:07,070
用語っていうものをメモ程度に意思表示したっていうようなクラスになってます。

81
00:08:09,380 --> 00:08:23,390
というわけで俯瞰するとエンティティと値オブジェクトがこんな風に関係し合っていると整理できたので、これを見ればよっぽどビギナーのプログラマー

82
00:08:23,390 --> 00:08:29,890
さんじゃなければ普通にクラスかけていくと思うので、このぐらいでエンティティと値オブジェクトいいんじゃないでしょうか。

83
00:08:30,380 --> 00:08:41,299
続いてはコントローラーとかメソッドとかあとはリポジトリーとかそういったような管理とか具体的な処理を担当するクラスを作っていきましょう。

